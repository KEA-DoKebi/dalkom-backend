name: Continuous Deployment

on:
  push :
    branches:
      - workflow
#    branches:
#      - release
#    types: [closed]

jobs:
  Push_to_Kakao:
    runs-on: self-hosted
#    if: github.event.pull_request.merged == true && github.base_ref == 'dev'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Docker Registry
      run: docker login dokebi-shop.kr-gov-central-1.kcr.dev --username ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

    - name: Build and Push to Docker Registry
      uses: docker/build-push-action@v2
      with:
        file : Dockerfile.linux
        push: true
        tags: ${{ secrets.BLUE_IMAGE }}, ${{ secrets.GREEN_IMAGE }}
        build-args: |
          APM_SERVICE_NAME=${{ secrets.APM_SERVICE_NAME }}
          APM_SECRET_TOKEN=${{ secrets.APM_SECRET_TOKEN }}
          ELASTIC_APM_SERVER_URL=${{ secrets.APM_SERVER_URL }}

  Run_Blue_on_Kakao :
    runs-on: self-hosted
    needs: Push_to_Kakao
        
    steps:
    - name: Deploy to Blue
      run: |
        source /root/credentials.sh
        ssh -A -J bastion blue 'bash -s' < /root/deploying.sh

  Health_Check :
    runs-on: self-hosted
    needs: Run_Blue_on_Kakao
              
    steps:
    - name: Initial Delay for Application Startup
      run: sleep 60

    - name: Health Check for Green Environment
      id: health-check
      run: |
        success_count=0
        failure_count=0
        while [ $success_count -lt 5 ] && [ $failure_count -lt 2 ]; do
        response=$(curl --write-out "%{http_code}" --silent --output /dev/null ${{ secrets.GREEN_ENVIRONMENT_URL }})
        if [ "$response" -eq 200 ]; then
            ((success_count++))
            failure_count=0
          else
            ((failure_count++))
            success_count=0
          fi
          echo "Success count: $success_count, Failure count: $failure_count"
          if [ $failure_count -eq 2 ]; then
            echo "Health check failed."
            exit 1
          fi
          sleep 30  # 체크 주기를 30초로 설정
          done
          echo "Health check passed."

  Run_Green_on_Kakao :
    runs-on: self-hosted
    needs: Health_Check
        
    steps:
    - name: Deploy to Green
      env :
        API_URL: ${{ secrets.API_URL }}
        TOKEN: ${{ secrets.TOKEN }}
      run: |
        ssh -A -J ubuntu@${{ secrets.BASTION_IP }} -p ${{ secrets.BASTION_PORT }} ubuntu@${{ secrets.WAS_GREEN_IP }}
        docker pull ${{ secrets.GREEN_IMAGE }}
        docker stop spring_green 2>/dev/null || true
        export INFISICAL_API_URL= $API_URL
        export INFISICAL_TOKEN = $TOKEN
        infisical export --path="/DB"  --format=dotenv > .env
        python string_to_num.py
        docker run --name spring_green --rm -itd -p ${{ secrets.WAS_INNER_PORT }}:${{ secrets.WAS_GREEN_PORT }} --env-file .env ${{ secrets.GREEN_IMAGE }}
