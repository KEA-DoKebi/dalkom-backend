name: SonarQube on Backend

on:
  push

jobs:
  Sonarqube_Analysis :
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 

    # Set up JDK for Gradle
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin' 

    # Cache Gradle dependencies
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    # Build with Gradle
    - name: Build with Gradle
      run: ./gradlew ./gradlew build test jacocoTestReport --continue

    # Download and setup SonarScanner
    - name: Install SonarScanner
      run: |
        curl -Lo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
        unzip sonar-scanner-cli.zip
        echo "PATH=$(pwd)/sonar-scanner-4.6.2.2472-linux/bin:$PATH" >> $GITHUB_ENV

    # Run SonarQube Scan
    - name: Run SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        SONAR_PROJECT_KEY : ${{ secrets.SONAR_PROJECT_KEY }}
      run: |
        sonar-scanner \
          -Dsonar.projectKey=$SONAR_PROJECT_KEY \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.token=$SONAR_TOKEN \
          -Dsonar.java.binaries=./build
          -Dsonar.coverage.jacoco.xmlReportPaths=./build/reports/jacoco/test/jacocoTestReport.xml
