plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.sonarqube' version "4.0.0.2929"
    id 'jacoco'
}

group = 'com.dokebi'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.8")
}


dependencies {
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    testImplementation 'org.projectlombok:lombok:1.18.28'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // MariaDB
    testImplementation 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'mysql:mysql-connector-java'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA
    implementation 'io.jsonwebtoken:jjwt:0.9.1' // jwt
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.json:json:20210307'
}

tasks.named('test') {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

bootJar {
    archivesBaseName = 'dalkom'
    archiveFileName = 'dalkom.jar'
}

sonarqube {
    properties {
        property "sonar.projectKey", "KEA-DoKebi_dalkom-backend_AY0ILkkA7nQIqqNyuD-r"
        property "sonar.host.url", "https://b3a1-203-249-127-39.ngrok-free.app"
    }
}

jacoco {
    toolVersion = "0.8.7"
}

test {
    ignoreFailures = true
    finalizedBy 'jacocoTestReport'
    useJUnitPlatform()

//    jacoco {
//        excludes += ["com/dokebi/dalkom/domain/.class",
//                     "com/example/thandbag/exceptionHandler/**",
//                     "com/example/thandbag/repository/**",
//                     "com/example/thandbag/service/KakaoUserService.class"]
//    }
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.required = true
    }


    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "com/dokebi/dalkom/domain/**/config",
                    "com/dokebi/dalkom/common/**/",
                    "com/dokebi/dalkom/domain/**/dto",
                    "com/dokebi/dalkom/domain/**/entity",
                    "com/dokebi/dalkom/domain/jira/**",
                    "com/dokebi/dalkom/domain/**/exception",
                    "com/dokebi/dalkom/domain/chat/**",
            ])
        }))
    }
}




